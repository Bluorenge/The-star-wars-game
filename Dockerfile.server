ARG NODE_VERSION=16
ARG SERVER_PORT=3001

# Команда FROM обозначает, какой образ какой версии надо взять за основу вашего контейнера
# Под базовым слоем понимаем «родительский образ». То есть это как будто ОС с надстройкой
# Синтаксис команды: FROM %BASE%:%VERSION%. %BASE% — имя образа, %VERSION% — версия
FROM node:$NODE_VERSION-buster as base

# Команда WORKDIR указывает контейнеру, куда нужно сделать команду `cd` внутри контейнера при сборке и запуске контейнера. В данном случае переходим в папку `app`
WORKDIR /app

FROM base as builder
# COPY %local file% %container file%
COPY package.json yarn.lock ./
# RUN запускает операцию в командной строке на этапе сборки
RUN yarn install --frozen-lockfile

COPY . .

RUN yarn lerna bootstrap
RUN rm -rf /app/packages/server/dist/ && yarn build --scope=server
RUN rm -rf /app/packages/client/dist/ && yarn build --scope=client

FROM node:$NODE_VERSION-buster-slim as production
WORKDIR /app

COPY --from=builder /app/packages/server/dist/ /app/
COPY --from=builder /app/packages/server/package.json /app/package.json

RUN yarn install --production=true

COPY --from=builder /app/packages/client/dist/ /app/node_modules/client/dist
COPY --from=builder /app/packages/client/src/server.entry.tsx /app/node_modules/client/src/server.entry.tsx

# При старте контейнер начнёт общаться через указанный порт
EXPOSE $SERVER_PORT
# Эта команда выполнится, когда контейнер будет запущен
CMD [ "node", "index.js" ]
